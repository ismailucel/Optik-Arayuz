// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Optik_Arayüz_UI.Data;

#nullable disable

namespace Optik_Arayüz_UI.Data.Migrations
{
    [DbContext(typeof(OptikArayuzDbContext))]
    [Migration("20230407140646_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Choice", b =>
                {
                    b.Property<int>("ChoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChoiceId"));

                    b.Property<int>("ChoiceCount")
                        .HasColumnType("int");

                    b.Property<int?>("ChoiceId1")
                        .HasColumnType("int");

                    b.Property<double>("Label")
                        .HasColumnType("float");

                    b.Property<double>("XLength")
                        .HasColumnType("float");

                    b.Property<double>("YLength")
                        .HasColumnType("float");

                    b.HasKey("ChoiceId");

                    b.HasIndex("ChoiceId1");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int>("ClassicCount")
                        .HasColumnType("int");

                    b.Property<string>("ExamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamPaperId")
                        .HasColumnType("int");

                    b.Property<int>("TestCount")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ExamId");

                    b.HasIndex("ExamPaperId");

                    b.HasIndex("UserId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.ExamPaper", b =>
                {
                    b.Property<int>("ExamPaperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamPaperId"));

                    b.Property<string>("ExamPaperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamPaperTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExamPaperId");

                    b.ToTable("ExamPapers");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.ExamPaperElement", b =>
                {
                    b.Property<int>("ExamPaperElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamPaperElementId"));

                    b.Property<int>("ExamPaperId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.HasKey("ExamPaperElementId");

                    b.HasIndex("ExamPaperId");

                    b.ToTable("ExamPaperElements");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<string>("FacultyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<int>("QuestionCount")
                        .HasColumnType("int");

                    b.Property<double>("XLength")
                        .HasColumnType("float");

                    b.Property<double>("YLength")
                        .HasColumnType("float");

                    b.HasKey("GradeId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Logo", b =>
                {
                    b.Property<int>("LogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogoId"));

                    b.Property<int>("ImagePath")
                        .HasColumnType("int");

                    b.Property<double>("XLength")
                        .HasColumnType("float");

                    b.Property<double>("YLength")
                        .HasColumnType("float");

                    b.HasKey("LogoId");

                    b.ToTable("Logos");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Number", b =>
                {
                    b.Property<int>("NumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumberId"));

                    b.Property<double>("Label")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<double>("XLength")
                        .HasColumnType("float");

                    b.Property<double>("YLength")
                        .HasColumnType("float");

                    b.HasKey("NumberId");

                    b.ToTable("Numbers");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("XLength")
                        .HasColumnType("float");

                    b.Property<double>("YLength")
                        .HasColumnType("float");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Test", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestId"));

                    b.Property<int>("QuestionCount")
                        .HasColumnType("int");

                    b.Property<double>("XLength")
                        .HasColumnType("float");

                    b.Property<double>("YLength")
                        .HasColumnType("float");

                    b.HasKey("TestId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Text", b =>
                {
                    b.Property<int>("TextId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TextId"));

                    b.Property<int>("FontSize")
                        .HasColumnType("int");

                    b.Property<string>("FontType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TextId");

                    b.ToTable("Texts");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Choice", b =>
                {
                    b.HasOne("Optik_Arayüz_UI.Models.Choice", null)
                        .WithMany("Choices")
                        .HasForeignKey("ChoiceId1");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Exam", b =>
                {
                    b.HasOne("Optik_Arayüz_UI.Models.ExamPaper", "ExamPaper")
                        .WithMany()
                        .HasForeignKey("ExamPaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Optik_Arayüz_UI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamPaper");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.ExamPaperElement", b =>
                {
                    b.HasOne("Optik_Arayüz_UI.Models.ExamPaper", "ExamPaper")
                        .WithMany()
                        .HasForeignKey("ExamPaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamPaper");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.User", b =>
                {
                    b.HasOne("Optik_Arayüz_UI.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Optik_Arayüz_UI.Models.Choice", b =>
                {
                    b.Navigation("Choices");
                });
#pragma warning restore 612, 618
        }
    }
}
